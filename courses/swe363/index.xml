<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>SWE 363 Web Engineering and Development on Alaaddin</title><link>http://alasidig.github.io/swe-363.github.io/courses/swe363/</link><description>Recent content in SWE 363 Web Engineering and Development on Alaaddin</description><generator>Source Themes academia (https://sourcethemes.com/academic/)</generator><language>en-us</language><copyright>Copyright &amp;copy; {year}</copyright><lastBuildDate>Wed, 12 Jan 2022 09:20:03 +0300</lastBuildDate><atom:link href="http://alasidig.github.io/swe-363.github.io/courses/swe363/index.xml" rel="self" type="application/rss+xml"/><item><title>HTML Basics</title><link>http://alasidig.github.io/swe-363.github.io/courses/swe363/html/basics/</link><pubDate>Wed, 12 Jan 2022 09:36:41 +0300</pubDate><guid>http://alasidig.github.io/swe-363.github.io/courses/swe363/html/basics/</guid><description>&lt;h2 id="html-5-semantic-tags">HTML 5 Semantic Tags&lt;/h2>
&lt;h3 id="objective">Objective&lt;/h3>
&lt;p>To learn the page structure element elements in HTML5 and also to learn HTML5 Forms.&lt;/p>
&lt;h3 id="some-html-5-semantic-tags">Some HTML 5 Semantic Tags&lt;/h3>
&lt;p>&lt;img src="https://www.codeproject.com/KB/HTML/semanticHtml5PageLayout/html5pagelayout.png" alt="HTML 5 semantic tags">
These are some semantic structure elements. If you are viewing this page on laptop or any device with a biger screen, you can name these tags.&lt;/p>
&lt;p>The &lt;code>&amp;lt;header&amp;gt;&lt;/code> may be used at the top of the page. Then after that, you may have navigation ( &lt;code>&amp;lt;nav&amp;gt;&lt;/code>)to the right and sometimes also the navigation is moved below the header. And at the bottom, we will have a &lt;code>&amp;lt;footer&amp;gt;&lt;/code>. Which is going to list some links like contacts or useful links or sitemap.&lt;/p>
&lt;p>The &lt;code>&amp;lt;main&amp;gt;&lt;/code> section holds the main content of the page. And it can be divided into &lt;code>&amp;lt;sections&amp;gt;&lt;/code>. Each section will have its &lt;code>&amp;lt;header&amp;gt;&lt;/code>, which contains a title for that section, and may have an &lt;code>&amp;lt;article&amp;gt;&lt;/code> that contains the content of this section, and it also may have a &lt;code>&amp;lt;footer&amp;gt;&lt;/code> to conclude this section. And then after that, you can have another &lt;code>&amp;lt;section&amp;gt;&lt;/code> or so on.&lt;/p>
&lt;p>Before every HTML5, these tags were not there, and people were only using the &lt;code>&amp;lt;div&amp;gt;&lt;/code> tag. then they either give it an &lt;code>id&lt;/code> equal to main or they give it a &lt;code>class&lt;/code> named main or something like that to distinguish from others.&lt;/p>
&lt;p>Alright, so now whenever we design our webpage, would like to have these tags. These tags will help the search engines to index our page well. When it finds something in the main it would say that this is the main topic of the page. And when it finds something in a section it&amp;rsquo;s going to say that this section is about this topic.&lt;/p>
&lt;h3 id="semantic-tags-in-action">Semantic Tags in Action&lt;/h3>
&lt;p>The following video shows the usage of semantic tags in twitter website.
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/KSwtTPAyiu4" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/p>
&lt;h2 id="exercises">Exercises&lt;/h2>
&lt;h3 id="debug-html">Debug HTML&lt;/h3>
&lt;details>
&lt;summary>
Expand
&lt;/summary>
&lt;p>This simple web page has some issues which are preventing the content from being displayed correctly. Identify and fix the issues. This practice is also called &amp;ldquo;debugging&amp;rdquo; your code.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&lt;span style="color:#75715e">&amp;lt;!DOCTYPE html&amp;gt;&lt;/span>
&amp;lt;&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">head&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">p&lt;/span>&amp;gt;This sentence should be on its own So should this one.&amp;lt;/&lt;span style="color:#f92672">p&lt;/span>&amp;gt;
&amp;lt;&lt;span style="color:#f92672">p.&lt;/span> &lt;span style="color:#a6e22e">Whats&lt;/span> &lt;span style="color:#a6e22e">wrong&lt;/span> &lt;span style="color:#a6e22e">with&lt;/span> &lt;span style="color:#a6e22e">this&lt;/span> &lt;span style="color:#a6e22e">sentence&lt;/span>&lt;span style="color:#960050;background-color:#1e0010">?&lt;/span> &lt;span style="color:#960050;background-color:#1e0010">&amp;lt;&lt;/span>&lt;span style="color:#a6e22e">p&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">body&lt;/span>&amp;gt;
&amp;lt;/&lt;span style="color:#f92672">html&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>
&lt;/details>
&lt;h3 id="create-a-webpage">Create a webpage&lt;/h3>
&lt;details>
&lt;summary>
Expand
&lt;/summary>
&lt;p>Given the following text:&lt;/p>
&lt;pre tabindex="0">&lt;code>My Hobbies
Soccer
5 years
Soccer is an awesome sport because you get to play on a team with all your friends. I love the challenge of learning new skills like headers and corner kicks.
Baking
10 years
I love baking because you put together all these things that look simple and boring on their own to make something magical and delicious. I also love how baked things make people happy. Sharing things I bake might be the best part of it!
Drawing
2 years
On the weekend sometimes I go outside and try to draw what I see. My favorite things to draw are buildings.
&lt;/code>&lt;/pre>&lt;p>try to use your HTML skills to create a page that looks like the following
&lt;img src="../html-mini-challenge01.png" alt="html mini challenge">&lt;/p>
&lt;/details>
&lt;h3 id="html-5-webpage">HTML 5 Webpage&lt;/h3>
&lt;details>
&lt;summary>
Expand
&lt;/summary>
&lt;p>Given the text:&lt;/p>
&lt;pre tabindex="0">&lt;code>Easy 5-Minute Banana Smoothie Easy 5-Minute Banana Smoothie
PREP 5mins TOTAL 5mins
Our banana smoothie is extra creamy and fruity. Depending on how ripe or sweet your banana and orange are, you may need to add a little extra honey, so add based on your taste. There are many additions you can make.
For a green smoothie, add 1/2 cup to 1 cup of fresh greens like spinach or kale.
You can also add more fruit. Add 1/2 cup of strawberries, mango, frozen berries, pineapple, or other favorite fruit.
Makes 2 kid-size smoothies or 1 large You Will Need 1 banana 1/2 orange, peeled and quartered 1/3 cup Greek yogurt 1/4 cup water or milk (dairy or non-dairy) 1 to 2 teaspoons honey, optional Directions Roughly chop the banana and orange quarters, and then add to a blender.
Top with yogurt and water (or milk).
Turn blender on and blend until creamy and smooth.
Taste, and then adjust with honey if needed.
Adam and Joanne's Tips How to Freeze or Make Ahead: This recipe makes one smoothie or two kid-size smoothies.
Enjoy now, or save for later. To save the smoothie for later, pour each serving into a food-safe resealable plastic bag or container and freeze. Then, about an hour before needing the smoothie, take it out from the freezer.
Non-Dairy alternatives: If you are looking for a banana smoothie without yogurt, then simply leave the yogurt out of the recipe above and replace it with more banana, a tablespoon or so of nut butter, mango, or a tablespoon of hemp seeds (great protein source). You may need to add additional water or non-dairy milk to thin the smoothie out a little.
Nutrition facts: The nutrition facts provided below are estimates.
We have used the USDA database to calculate approximate values.
If you make this recipe, snap a photo and hashtag it #inspiredtaste â€” We love to see your creations on Instagram and Facebook! Find us: @inspiredtaste
NUTRITION PER SERVING:
Serving Size 1 kid-size smoothie / Calories 122 / Protein 5 g / Carbohydrate 23 g / Dietary Fiber 3 g / Total Sugars 16 g / Total Fat 2 g / Saturated Fat 1 g / Cholesterol 5 mg
AUTHOR: Adam and Joanne Gallagher The full recipe post can be found on Inspired Taste here: https://www.inspiredtaste.net/19907/simple-banana-smoothie-recipe/
&lt;/code>&lt;/pre>&lt;p>and the image at&lt;/p>
&lt;pre tabindex="0">&lt;code>https://www.inspiredtaste.net/wp-content/uploads/2016/06/Banana-Smoothie-Recipe-3-1200.jpg
&lt;/code>&lt;/pre>&lt;p>Use your HTML 5 skills to create a page like the following&lt;/p>
&lt;p>&lt;img src="../recipe-minichallenge.png" alt="recipe minichallenge">&lt;/p>
&lt;/details>
&lt;h2 id="more-resources">More Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/HTML/Introduction_to_HTML/Document_and_website_structure"> Document and website structure&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://dev.to/kenbellows/stop-using-so-many-divs-an-intro-to-semantic-html-3i9i"> Stop using so many divs! An intro to semantic HTML&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>HTML Advanced</title><link>http://alasidig.github.io/swe-363.github.io/courses/swe363/html/advanced/</link><pubDate>Wed, 12 Jan 2022 09:36:41 +0300</pubDate><guid>http://alasidig.github.io/swe-363.github.io/courses/swe363/html/advanced/</guid><description>&lt;h2 id="objectives">Objectives:&lt;/h2>
&lt;p>How we can write an HTML form and what is the rule of HTML forms&lt;/p>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Forms provide the user with a way to interact with a web server. An interactive website allows users to input data using forms. Forms are frontend to backend data transformers.&lt;/p>
&lt;p>For example, if we are going to design a website for fast food. The front end should show some images of the meals. And also the user should be able to click somewhere on the page to add to the shopping cart. And when checking out, he should be able to set his address to deliver the food in a form. So all that should be done on the front end. But we also need to pass data from the front end to the back end so that the admin of this restaurant to be able to serve this customer. The admin will have another view which talks to the database and tell the admin that some person here is ordering a meal and he would like to get it in that address.&lt;/p>
&lt;p>&lt;img src="https://www.javascript-coder.com/html-form/images/server-side-script-part.png" alt="Form sent to the server" title="The frontend enables the user to enter the data and submit it to the backend">
Forms usually include a series of HTML &lt;code>&amp;lt;input&amp;gt;&lt;/code> tags. There are many other tags, but input is the most used. Before HTML 5 there was a limited number of data entry controls that are available. In HTML 5 there are controls for entering text, choosing from a list of buttons and checkboxes, radio buttons ..etc. HTML 5 also added more new controls that we can use to customize options for existing controls.&lt;/p>
&lt;h2 id="worked-example">Worked Example&lt;/h2>
&lt;p>Let&amp;rsquo;s create a simple form that asks the user for a feedback. The required fields includes his name, phone, and a message.
&lt;div class="responsive-wrap">
&lt;iframe src="https://replit.com/@alasidig/forms?lite=true" frameborder="0" width="960" height="569" allowfullscreen="true" mozallowfullscreen="true" webkitallowfullscreen="true">&lt;/iframe>
&lt;/div>&lt;br>
The form starts from line 10 where we added the &lt;code>&amp;lt;form&amp;gt;&lt;/code> tag. Then followed by an &lt;code>&amp;lt;input&amp;gt;&lt;/code> tag for the user name, then another one for the phone, and finally a &lt;code>&amp;lt;textarea&amp;gt;&lt;/code> to hold the message. The &lt;code>&amp;lt;ul&amp;gt;&lt;/code> and &lt;code>&amp;lt;li&amp;gt;&lt;/code> tags are used to format the fields to show in a vertical column because the &lt;code>&amp;lt;input&amp;gt;&lt;/code> and &lt;code>&amp;lt;textarea&amp;gt;&lt;/code> are &lt;code>inline&lt;/code> elements. Click on the green button to see the output.&lt;/p>
&lt;h3 id="the-input-field">The &lt;code>&amp;lt;input&amp;gt;&lt;/code> field&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html"> &amp;lt;&lt;span style="color:#f92672">input&lt;/span> &lt;span style="color:#a6e22e">type&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;text&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">name&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;user&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">placeholder&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;Enter your name&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">required&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>It is a self closing tag&lt;/li>
&lt;li>The &lt;code>type&lt;/code> attribute can have many values like number, email, password, &amp;hellip;etc. It is helpful for simple validation and will render a sutable keyboard on the smartphones.&lt;/li>
&lt;li>The &lt;code>placeholder&lt;/code> attribute is used to display a helping string to the the user what should he input in this field.&lt;/li>
&lt;li>The &lt;code>required&lt;/code> attribute is used to force the user to fill the field before submission.&lt;/li>
&lt;li>The &lt;code>name&lt;/code> attribute is used to communicate the entered values to the server. When submitting this form, a dictionary of keys and values will be created. The keys are what is being assigned to the &lt;code>name&lt;/code> attribute. And the values are the user response for each field. Try to change the &lt;code>name&lt;/code> attribute for the first &lt;code>&amp;lt;input&amp;gt;&lt;/code> to user2 and see the result.&lt;/li>
&lt;li>Setting the &lt;code>type&lt;/code> to submit will create a button to submit the form and enable submitting the form by just pressing the enter key on the keyboard.&lt;/li>
&lt;li>There are many other attributes not added here such as &lt;code>value&lt;/code>, &lt;code>onkeyup&lt;/code>, &amp;hellip;&lt;/li>
&lt;/ul>
&lt;h3 id="the-textarea-field">The &lt;code>&amp;lt;textarea&amp;gt;&lt;/code> field&lt;/h3>
&lt;ul>
&lt;li>It is used to enable the user to enter more than one line of text.&lt;/li>
&lt;li>There are some other attributes not added here such as &lt;code>rows&lt;/code>, &lt;code>cols&lt;/code>,&amp;hellip;&lt;/li>
&lt;/ul>
&lt;h3 id="the-form-tag">The &lt;code>&amp;lt;form&amp;gt;&lt;/code> tag&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-html" data-lang="html">&amp;lt;&lt;span style="color:#f92672">form&lt;/span> &lt;span style="color:#a6e22e">action&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;result.html&amp;#34;&lt;/span> &lt;span style="color:#a6e22e">method&lt;/span>&lt;span style="color:#f92672">=&lt;/span>&lt;span style="color:#e6db74">&amp;#34;get&amp;#34;&lt;/span>&amp;gt;
&lt;/code>&lt;/pre>&lt;/div>&lt;ul>
&lt;li>It wraps the input fields.&lt;/li>
&lt;li>The &lt;code>action&lt;/code> attribute tels where to submit the form. It accept the URL of the server that will process the form data. Since we are only discussing the frontend now, the server side script will not be discussed.&lt;/li>
&lt;li>There are many other attributes not added here such as &lt;code>onsubmit&lt;/code>, &lt;code>enctype&lt;/code>, &amp;hellip;&lt;/li>
&lt;li>The &lt;code>method&lt;/code> attribute determines how to submit the form. It can be set to &lt;code>get&lt;/code> or &lt;code>post&lt;/code>. There are some differences between the two methods as shown in the following video
&lt;div style="position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;">
&lt;iframe src="https://www.youtube.com/embed/Vk2Rm6tthz8" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;" allowfullscreen title="YouTube Video">&lt;/iframe>
&lt;/div>
&lt;/li>
&lt;/ul>
&lt;h2 id="exercises">Exercises&lt;/h2>
&lt;h3 id="company-hiring-form">Company hiring form&lt;/h3>
&lt;details>
&lt;summary>
Expand
&lt;/summary>
Create a web page for a company of your choice it should contain some description, products, images, and a large title: &lt;strong>We are hiring join us by filling this application.&lt;/strong> the title should link to a page that contains the following form:
&lt;img src="../jop_form.png" alt="job_form.png">
&lt;/details>
&lt;h3 id="restaurant-table-reservation">Restaurant Table Reservation&lt;/h3>
&lt;details>
&lt;summary>
Expand
&lt;/summary>
&lt;p>create a web page for a restaurant. it should contain an image and a list of meals with some description. it should contain a link to another page that contains a form to reserve a table like the following.&lt;/p>
&lt;p>&lt;img src="../table_form.gif" alt="table_form.gif">&lt;/p>
&lt;/details>
&lt;h2 id="more-resources">More Resources&lt;/h2>
&lt;ul>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Forms/Your_first_form" target="_blank">
Your first form
&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Forms/Basic_native_form_controls" target="_blank">
Basic native form controls
&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://developer.mozilla.org/en-US/docs/Learn/Forms/HTML5_input_types" target="_blank">
The HTML5 input types
&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://webaim.org/techniques/forms/controls" target="_blank">
Creating Accessible Forms
&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>