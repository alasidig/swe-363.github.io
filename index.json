[{"authors":["admin"],"categories":null,"content":"Alaaddin Sabr is a professor of Computer Science at the KFUPM ICTC. His research interests include Computer vision, and Machine learning. He is interested in web development and mobile app development.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"http://alasidig.github.io/swe-363.github.io/authors/admin/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/swe-363.github.io/authors/admin/","section":"authors","summary":"Alaaddin Sabr is a professor of Computer Science at the KFUPM ICTC. His research interests include Computer vision, and Machine learning. He is interested in web development and mobile app development.","tags":null,"title":"Alaaddin Sabr","type":"authors"},{"authors":null,"categories":null,"content":"Course Description Fundamentals of web and mobile applications and how they impact people’s lives; Building responsive front-end web and mobile apps; Back-end programming of dynamic and data-driven websites; Development frameworks for web and mobile apps; Security issues of web applications; Practical applications to real-world problems.\nPrerequisites: Junior Standing\nIn This Website: You will find the handouts for the different topics discussed in the course.\n","date":1641968403,"expirydate":-62135596800,"kind":"section","lang":"en","lastmod":1641968403,"objectID":"1eba9cb6528b8e3654eb6b17751acbc7","permalink":"http://alasidig.github.io/swe-363.github.io/courses/swe363/","publishdate":"2022-01-12T09:20:03+03:00","relpermalink":"/swe-363.github.io/courses/swe363/","section":"courses","summary":"Fundamentals of web and mobile applications and how they impact people’s lives; Building responsive front-end web and mobile apps; Back-end programming of dynamic and data-driven websites; Development frameworks for web and mobile apps; Security issues of web applications; Practical applications to real-world problems.","tags":null,"title":"SWE 363 Web Engineering and Development","type":"docs"},{"authors":null,"categories":null,"content":"HTML 5 Semantic Tags Objective To learn the page structure element elements in HTML5 and also to learn HTML5 Forms.\nSome HTML 5 Semantic Tags These are some semantic structure elements. If you are viewing this page on laptop or any device with a biger screen, you can name these tags.\nThe \u0026lt;header\u0026gt; may be used at the top of the page. Then after that, you may have navigation ( \u0026lt;nav\u0026gt;)to the right and sometimes also the navigation is moved below the header. And at the bottom, we will have a \u0026lt;footer\u0026gt;. Which is going to list some links like contacts or useful links or sitemap.\nThe \u0026lt;main\u0026gt; section holds the main content of the page. And it can be divided into \u0026lt;sections\u0026gt;. Each section will have its \u0026lt;header\u0026gt;, which contains a title for that section, and may have an \u0026lt;article\u0026gt; that contains the content of this section, and it also may have a \u0026lt;footer\u0026gt; to conclude this section. And then after that, you can have another \u0026lt;section\u0026gt; or so on.\nBefore every HTML5, these tags were not there, and people were only using the \u0026lt;div\u0026gt; tag. then they either give it an id equal to main or they give it a class named main or something like that to distinguish from others.\nAlright, so now whenever we design our webpage, would like to have these tags. These tags will help the search engines to index our page well. When it finds something in the main it would say that this is the main topic of the page. And when it finds something in a section it\u0026rsquo;s going to say that this section is about this topic.\nSemantic Tags in Action The following video shows the usage of semantic tags in twitter website.   Exercises Debug HTML   Expand  This simple web page has some issues which are preventing the content from being displayed correctly. Identify and fix the issues. This practice is also called \u0026ldquo;debugging\u0026rdquo; your code.\n\u0026lt;!DOCTYPE html\u0026gt; \u0026lt;html\u0026gt; \u0026lt;head\u0026gt; \u0026lt;/head\u0026gt; \u0026lt;body\u0026gt; \u0026lt;p\u0026gt;This sentence should be on its own So should this one.\u0026lt;/p\u0026gt; \u0026lt;p. Whats wrong with this sentence? \u0026lt;p\u0026gt; \u0026lt;/body\u0026gt; \u0026lt;/html\u0026gt;   Create a webpage   Expand  Given the following text:\nMy Hobbies Soccer 5 years Soccer is an awesome sport because you get to play on a team with all your friends. I love the challenge of learning new skills like headers and corner kicks. Baking 10 years I love baking because you put together all these things that look simple and boring on their own to make something magical and delicious. I also love how baked things make people happy. Sharing things I bake might be the best part of it! Drawing 2 years On the weekend sometimes I go outside and try to draw what I see. My favorite things to draw are buildings. try to use your HTML skills to create a page that looks like the following  HTML 5 Webpage   Expand  Given the text:\nEasy 5-Minute Banana Smoothie Easy 5-Minute Banana Smoothie PREP 5mins TOTAL 5mins Our banana smoothie is extra creamy and fruity. Depending on how ripe or sweet your banana and orange are, you may need to add a little extra honey, so add based on your taste. There are many additions you can make. For a green smoothie, add 1/2 cup to 1 cup of fresh greens like spinach or kale. You can also add more fruit. Add 1/2 cup of strawberries, mango, frozen berries, pineapple, or other favorite fruit. Makes 2 kid-size smoothies or 1 large You Will Need 1 banana 1/2 orange, peeled and quartered 1/3 cup Greek yogurt 1/4 cup water or milk (dairy or non-dairy) 1 to 2 teaspoons honey, optional Directions Roughly chop the banana and orange quarters, and then add to a blender. Top with yogurt and water (or milk). Turn blender on and blend until creamy and smooth. Taste, and then adjust with honey if needed. Adam and Joanne's Tips How to Freeze or Make Ahead: This recipe makes one smoothie or two kid-size smoothies. Enjoy now, or save for later. To save the smoothie for later, pour each serving into a food-safe resealable plastic bag or container and freeze. Then, about an hour before needing the smoothie, take it out from the freezer. Non-Dairy alternatives: If you are looking for a banana smoothie without yogurt, then simply leave the yogurt out of the recipe above and replace it with more banana, a tablespoon or so of nut butter, mango, or a tablespoon of hemp seeds (great protein source). You may need to add additional water or non-dairy milk to thin the smoothie out a little. Nutrition facts: The nutrition facts provided below are estimates. We have used the USDA database to calculate approximate values. If you make this recipe, snap a photo and hashtag it #inspiredtaste — We love to see your creations on Instagram and Facebook! Find us: @inspiredtaste NUTRITION PER SERVING: Serving Size 1 kid-size smoothie / Calories 122 / Protein 5 g / Carbohydrate 23 g / Dietary Fiber 3 g / Total Sugars 16 g / Total Fat 2 g / Saturated Fat 1 g / Cholesterol 5 mg AUTHOR: Adam and Joanne Gallagher The full recipe post can be found on Inspired Taste here: https://www.inspiredtaste.net/19907/simple-banana-smoothie-recipe/ and the image at\nhttps://www.inspiredtaste.net/wp-content/uploads/2016/06/Banana-Smoothie-Recipe-3-1200.jpg Use your HTML 5 skills to create a page like the following\n More Resources  Document and website structure Stop using so many divs! An intro to semantic HTML  ","date":1641969401,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1641969401,"objectID":"fade77184d2e8eb8ac218d0a6d62825e","permalink":"http://alasidig.github.io/swe-363.github.io/courses/swe363/html/basics/","publishdate":"2022-01-12T09:36:41+03:00","relpermalink":"/swe-363.github.io/courses/swe363/html/basics/","section":"courses","summary":"The basic tags in HTML.","tags":["html","front-end","semantic-tags"],"title":"HTML Basics","type":"docs"},{"authors":null,"categories":null,"content":"Objectives: How we can write an HTML form and what is the rule of HTML forms\nIntroduction Forms provide the user with a way to interact with a web server. An interactive website allows users to input data using forms. Forms are frontend to backend data transformers.\nFor example, if we are going to design a website for fast food. The front end should show some images of the meals. And also the user should be able to click somewhere on the page to add to the shopping cart. And when checking out, he should be able to set his address to deliver the food in a form. So all that should be done on the front end. But we also need to pass data from the front end to the back end so that the admin of this restaurant to be able to serve this customer. The admin will have another view which talks to the database and tell the admin that some person here is ordering a meal and he would like to get it in that address.\nForms usually include a series of HTML \u0026lt;input\u0026gt; tags. There are many other tags, but input is the most used. Before HTML 5 there was a limited number of data entry controls that are available. In HTML 5 there are controls for entering text, choosing from a list of buttons and checkboxes, radio buttons ..etc. HTML 5 also added more new controls that we can use to customize options for existing controls.\nWorked Example Let\u0026rsquo;s create a simple form that asks the user for a feedback. The required fields includes his name, phone, and a message.  \nThe form starts from line 10 where we added the \u0026lt;form\u0026gt; tag. Then followed by an \u0026lt;input\u0026gt; tag for the user name, then another one for the phone, and finally a \u0026lt;textarea\u0026gt; to hold the message. The \u0026lt;ul\u0026gt; and \u0026lt;li\u0026gt; tags are used to format the fields to show in a vertical column because the \u0026lt;input\u0026gt; and \u0026lt;textarea\u0026gt; are inline elements. Click on the green button to see the output.\nThe \u0026lt;input\u0026gt; field \u0026lt;input type=\u0026#34;text\u0026#34; name=\u0026#34;user\u0026#34; placeholder=\u0026#34;Enter your name\u0026#34; required\u0026gt;  It is a self closing tag The type attribute can have many values like number, email, password, \u0026hellip;etc. It is helpful for simple validation and will render a sutable keyboard on the smartphones. The placeholder attribute is used to display a helping string to the the user what should he input in this field. The required attribute is used to force the user to fill the field before submission. The name attribute is used to communicate the entered values to the server. When submitting this form, a dictionary of keys and values will be created. The keys are what is being assigned to the name attribute. And the values are the user response for each field. Try to change the name attribute for the first \u0026lt;input\u0026gt; to user2 and see the result. Setting the type to submit will create a button to submit the form and enable submitting the form by just pressing the enter key on the keyboard. There are many other attributes not added here such as value, onkeyup, \u0026hellip;  The \u0026lt;textarea\u0026gt; field  It is used to enable the user to enter more than one line of text. There are some other attributes not added here such as rows, cols,\u0026hellip;  The \u0026lt;form\u0026gt; tag \u0026lt;form action=\u0026#34;result.html\u0026#34; method=\u0026#34;get\u0026#34;\u0026gt;  It wraps the input fields. The action attribute tels where to submit the form. It accept the URL of the server that will process the form data. Since we are only discussing the frontend now, the server side script will not be discussed. There are many other attributes not added here such as onsubmit, enctype, \u0026hellip; The method attribute determines how to submit the form. It can be set to get or post. There are some differences between the two methods as shown in the following video     Exercises Company hiring form   Expand  Create a web page for a company of your choice it should contain some description, products, images, and a large title: We are hiring join us by filling this application. the title should link to a page that contains the following form:  Restaurant Table Reservation   Expand  create a web page for a restaurant. it should contain an image and a list of meals with some description. it should contain a link to another page that contains a form to reserve a table like the following.\n More Resources  Your first form  Basic native form controls  The HTML5 input types  Creating Accessible Forms   ","date":1641969401,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1641969401,"objectID":"d1ae7f63919738e88b7821bf5bf7530f","permalink":"http://alasidig.github.io/swe-363.github.io/courses/swe363/html/advanced/","publishdate":"2022-01-12T09:36:41+03:00","relpermalink":"/swe-363.github.io/courses/swe363/html/advanced/","section":"courses","summary":"Some advanced tags in HTML like forms and tables.","tags":["html","front-end","form-fields"],"title":"HTML Advanced","type":"docs"},{"authors":[],"categories":null,"content":"Slides can be added in a few ways:\n Create slides using academia\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"8ebbbdeba622fbc24dab29b4efa6b173","permalink":"http://alasidig.github.io/swe-363.github.io/talk/coding/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/swe-363.github.io/talk/coding/","section":"talk","summary":"An example talk using academia's Markdown slides feature.","tags":[],"title":"Coding and Analyzing Qualitative Data","type":"talk"},{"authors":[],"categories":null,"content":"Slides can be added in a few ways:\n Create slides using academia\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"a3975af5f5dadc9b2c7bbc4e48bb0e6e","permalink":"http://alasidig.github.io/swe-363.github.io/talk/qualitative/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/swe-363.github.io/talk/qualitative/","section":"talk","summary":"An example talk using academia's Markdown slides feature.","tags":[],"title":"Qualitative Research Summer Intensive","type":"talk"},{"authors":[],"categories":null,"content":"Slides can be added in a few ways:\n Create slides using academia\u0026rsquo;s Slides feature and link using slides parameter in the front matter of the talk file Upload an existing slide deck to static/ and link using url_slides parameter in the front matter of the talk file Embed your slides (e.g. Google Slides) or presentation video on this page using shortcodes.  Further talk details can easily be added to this page using Markdown and $\\rm \\LaTeX$ math code.\n","date":1906549200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1906549200,"objectID":"f917008f74aa8012979052dcf8dbf864","permalink":"http://alasidig.github.io/swe-363.github.io/talk/synthesizing/","publishdate":"2017-01-01T00:00:00Z","relpermalink":"/swe-363.github.io/talk/synthesizing/","section":"talk","summary":"An example talk using academia's Markdown slides feature.","tags":[],"title":"Synthesizing Qualitative Data","type":"talk"},{"authors":[],"categories":[],"content":"Welcome to Slides academia\n Features  Efficiently write slides in Markdown 3-in-1: Create, Present, and Publish your slides Supports speaker notes Mobile friendly slides   Controls  Next: Right Arrow or Space Previous: Left Arrow Start: Home Finish: End Overview: Esc Speaker notes: S Fullscreen: F Zoom: Alt + Click PDF Export: E   Code Highlighting Inline code: variable\nCode block:\nporridge = \u0026#34;blueberry\u0026#34; if porridge == \u0026#34;blueberry\u0026#34;: print(\u0026#34;Eating...\u0026#34;)  Math In-line math: $x + y = z$\nBlock math:\n$$ f\\left( x \\right) = ;\\frac{{2\\left( {x + 4} \\right)\\left( {x - 4} \\right)}}{{\\left( {x + 4} \\right)\\left( {x + 1} \\right)}} $$\n Fragments Make content appear incrementally\n{{% fragment %}} One {{% /fragment %}} {{% fragment %}} **Two** {{% /fragment %}} {{% fragment %}} Three {{% /fragment %}} Press Space to play!\n A fragment can accept two optional parameters:\n class: use a custom style (requires definition in custom CSS) weight: sets the order in which a fragment appears   Speaker Notes Add speaker notes to your presentation\n{{% speaker_note %}} - Only the speaker can read these notes - Press `S` key to view {{% /speaker_note %}} Press the S key to view the speaker notes!\n Only the speaker can read these notes Press S key to view    Themes  black: Black background, white text, blue links (default) white: White background, black text, blue links league: Gray background, white text, blue links beige: Beige background, dark text, brown links sky: Blue background, thin dark text, blue links    night: Black background, thick white text, orange links serif: Cappuccino background, gray text, brown links simple: White background, black text, blue links solarized: Cream-colored background, dark green text, blue links   Custom Slide Customize the slide style and background\n{{\u0026lt; slide background-image=\u0026#34;/img/boards.jpg\u0026#34; \u0026gt;}} {{\u0026lt; slide background-color=\u0026#34;#0000FF\u0026#34; \u0026gt;}} {{\u0026lt; slide class=\u0026#34;my-style\u0026#34; \u0026gt;}}  Custom CSS Example Let\u0026rsquo;s make headers navy colored.\nCreate assets/css/reveal_custom.css with:\n.reveal section h1, .reveal section h2, .reveal section h3 { color: navy; }  Questions? Ask\nDocumentation\n","date":1549324800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1549324800,"objectID":"0e6de1a61aa83269ff13324f3167c1a9","permalink":"http://alasidig.github.io/swe-363.github.io/slides/example/","publishdate":"2019-02-05T00:00:00Z","relpermalink":"/swe-363.github.io/slides/example/","section":"slides","summary":"An introduction to using academia's Slides feature.","tags":[],"title":"Slides","type":"slides"}]